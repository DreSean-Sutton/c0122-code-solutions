User can sign up:
If the user clicks register or signup, the client's hash is changed to show the signup screen. The user can then
interact with the client by inputting a unique username with a password. They are sent to the server and if they're viable,
the password is hashed by argon2. Then, the username and hashed password is queried as a `select` request to be added to the database.
The database sends a response back to the server, which then informs the client whether the username and password were
successfully updated to the database or not. If not, the client displays an error, but the client's hash changes to the sign in screen either way.

User can sign in:
The user interacts with the client and can input a username and password.  If they're both viable, they are sent to the server.
In the server, it queries a `select` request to the database and grabs the userId and hashedPassword using the client's username if it is the database.
The server then verifies whether or not the hashedPassword is equal to the client's password. If it's matching,
the client is given a special token with their userId, their username, and the TOKEN_SECRET. They're also logged into the application.

User can stay signed in (even if they refresh the page):
When a user signs in, their token is automatically put into their local storage. Any hash changes or refreshing of the page,
grabs their token from local storage, decodes it, and uses it's information to change the state of the app back to that specific user.

User can sign out:
When the user signs out, their token is removed from their local storage. User state is also changed to null,
effectively changing the page back to the homepage.
